name: Android CI v2.9

run-name: Android CI Build (Triggered by @${{ github.actor }})

on:
  workflow_dispatch:
    inputs:
      release_title:
        description: 'Optional: Custom title for the GitHub Release. Defaults to the workflow name.'
        required: false
        default: ''
      key_changes:
        description: 'Optional: Key changes to add to the release notes.'
        required: false
        default: ''

permissions:
  contents: write
  actions: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build Debug APK
        id: build_apk
        run: |
          ./gradlew assembleDebug --no-daemon
          APK_PATH=$(find app/build/outputs/apk/debug -name "*.apk" | head -n 1)
          if [ ! -f "$APK_PATH" ]; then
            echo "::error::Debug APK not found after build."
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
          echo "Found APK at: $APK_PATH"

      - name: Stage and Rename APK
        id: stage_apk
        run: |
          NEW_APK_NAME="synapse-debug.apk"
          echo "Renaming APK to $NEW_APK_NAME"
          mv "$APK_PATH" "$NEW_APK_NAME"
          echo "path=$NEW_APK_NAME" >> $GITHUB_OUTPUT
          echo "APK size: $(du -h $NEW_APK_NAME | cut -f1)"

      - name: Prepare Release Information
        id: prepare_info
        run: |
          if [ -z "${{ inputs.release_title }}" ]; then
            RELEASE_TITLE="${{ github.workflow }}"
          else
            RELEASE_TITLE="${{ inputs.release_title }}"
          fi
          
          BUILD_ID=$(date +'%Y%m%d-%H%M')
          SHORT_SHA=$(git rev-parse --short HEAD)
          RELEASE_TAG="build-${BUILD_ID}-${SHORT_SHA}"
          
          {
            if [ -n "${{ inputs.key_changes }}" ]; then
              echo "### Key Changes"
              echo "${{ inputs.key_changes }}"
              echo ""
              echo "---"
              echo ""
            fi
            echo "### Commit History (last 10)"
            git log -10 --pretty=format:"- %s (%h)"
          } > CHANGELOG.md
          
          echo "RELEASE_TITLE=$RELEASE_TITLE" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.prepare_info.outputs.RELEASE_TITLE }}
          tag_name: ${{ steps.prepare_info.outputs.RELEASE_TAG }}
          files: ${{ steps.stage_apk.outputs.path }}
          body_file: CHANGELOG.md
          prerelease: true
        env:
          GITHUB_TOKEN: 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

  cleanup:
    runs-on: ubuntu-latest
    needs: build_and_release
    if: always()
    steps:
      - name: Clean up old workflow runs
        uses: matt-ball/workflow-run-cleanup-action@v2
        with:
          token: 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
          retain_days: 7
          retain_minimum_runs: 3
