name: Android CI (Debug)

on:
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  APP_NAME: "Sketchware Pro"

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK and Gradle Cache
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Build Application Package (APK)
        id: build_apk
        run: |
          ./gradlew assembleRelease --no-daemon
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
          if [ ! -f "$APK_PATH" ]; then
            echo "::error::APK not found at expected path: $APK_PATH"
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV

      - name: Verify and Stage APK
        id: verify_apk
        run: |
          if [ ! -f "$APK_PATH" ]; then
            echo "::error::PRIMARY FAILURE: The Release APK was not found. Halting workflow."
            exit 1
          fi
          mv "$APK_PATH" "release.apk"
          echo "APK size: $(du -h release.apk | cut -f1)"
          echo "path=release.apk" >> $GITHUB_OUTPUT

      - name: Prepare Release Information
        id: prepare_info
        run: |
          BUILD_ID=$(date +'%Y-%m-%d-%H%M%S')
          SHORT_SHA=$(git rev-parse --short HEAD)
          RELEASE_TAG="build-${BUILD_ID}-${SHORT_SHA}"
          
          # Generate changelog with error handling
          {
            echo "# Build Notes for ${RELEASE_TAG}"
            echo ""
            git log -10 --pretty=format:"- **%s** (%h)" || echo "- Could not generate full changelog"
          } > CHANGELOG.md
          
          echo "RELEASE_TAG=${RELEASE_TAG}" >> $GITHUB_OUTPUT
          echo "RELEASE_NAME=Build ${RELEASE_TAG}" >> $GITHUB_OUTPUT
          echo "Generated changelog with $(wc -l < CHANGELOG.md) lines"

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.prepare_info.outputs.RELEASE_TAG || format('build-{0}', github.run_id) }}
          name: ${{ steps.prepare_info.outputs.RELEASE_NAME || format('Build {0}', github.run_id) }}
          body_file: CHANGELOG.md
          files: release.apk
          prerelease: true

      - name: Show Release Info
        if: always()
        run: |
          echo "Release status: ${{ job.status }}"
          echo "Release URL: ${{ steps.create_release.outputs.html_url || 'Not created' }}"
          echo "Release Tag: ${{ steps.prepare_info.outputs.RELEASE_TAG || 'Unknown' }}"

  cleanup:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ always() }}
    steps:
      - name: Cleanup Artifacts
        run: |
          echo "Cleaning up workspace..."
          rm -f release.apk CHANGELOG.md || true
          echo "Cleanup complete"

      - name: Workflow Run Cleanup
        if: success()
        uses: rokroskar/workflow-run-cleanup-action@v1
        with:
          preserve_days: 7
          keep_minimum_runs: 1
          only_workflow: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}