name: Release Publisher

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'  # Semantic versioning (v1.2.3)

env:
  APP_NAME: "Sketchware Pro"

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for full changelog

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Build Release APK
        run: ./gradlew assembleRelease

      - name: Prepare Release Assets
        id: prepare
        run: |
          # Get version from tag (v1.2.3 -> 1.2.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Generate build info
          BUILD_DATE=$(date +'%Y-%m-%d %H:%M:%S %Z')
          BUILD_TIMESTAMP=$(date +'%s')
          APK_PATH="app/build/outputs/apk/release/app-release.apk"
          APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
          APK_SHA256=$(sha256sum "$APK_PATH" | cut -d' ' -f1)
          
          # Create formatted filename
          RELEASE_FILENAME="${APP_NAME}-v${VERSION}-${BUILD_TIMESTAMP}.apk"
          mv "$APK_PATH" "$RELEASE_FILENAME"
          
          # Generate professional changelog
          echo "# Release Notes v${VERSION}" > CHANGELOG.md
          echo "### Build Date: ${BUILD_DATE}" >> CHANGELOG.md
          echo "### File SHA256: \`${APK_SHA256}\`" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## What's Changed" >> CHANGELOG.md
          git log --pretty=format:"- **%s** ([%h](https://github.com/$GITHUB_REPOSITORY/commit/%H))" \
            --no-merges v$(git describe --abbrev=0 --tags | sed 's/^v//')..HEAD >> CHANGELOG.md
          
          # Create summary for Telegram
          echo "SUMMARY<<EOF" >> $GITHUB_ENV
          git log --pretty=format:"- %s" --no-merges v$(git describe --abbrev=0 --tags | sed 's/^v//')..HEAD | head -n 3 >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          
          # Set outputs
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "BUILD_DATE=${BUILD_DATE}" >> $GITHUB_ENV
          echo "APK_SIZE=${APK_SIZE}" >> $GITHUB_ENV
          echo "RELEASE_FILENAME=${RELEASE_FILENAME}" >> $GITHUB_ENV
          echo "SHA256=${APK_SHA256}" >> $GITHUB_ENV

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: release-assets
          path: |
            ${{ env.RELEASE_FILENAME }}
            CHANGELOG.md

      - name: Generate Secure Download
        id: download
        run: |
          # Create time-limited download URL
          DL_LINK="https://nightly.link/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/artifacts/$RELEASE_FILENAME.zip"
          echo "DOWNLOAD_URL=${DL_LINK}" >> $GITHUB_ENV
          echo "url=${DL_LINK}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: "${{ env.APP_NAME }} v${{ env.VERSION }}"
          body: file://CHANGELOG.md
          files: |
            ${{ env.RELEASE_FILENAME }}
          draft: false
          prerelease: false

      - name: Send Professional Announcement
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message_thread_id: ${{ secrets.TELEGRAM_TOPIC_ID }}
          parse_mode: HTML
          message: |
            <b>üéâ ${{ env.APP_NAME }} v${{ env.VERSION }} Released!</b>
            
            <b>üìÖ Release Date:</b> <code>${{ env.BUILD_DATE }}</code>
            <b>üì¶ Package Size:</b> <code>${{ env.APK_SIZE }}</code>
            <b>üîí Integrity Check:</b> <code>SHA256:${{ env.SHA256 }}</code>
            
            <b>üöÄ Key Changes:</b>
            <pre>${{ env.SUMMARY }}</pre>
            
            <i>Full changelog and additional downloads available on GitHub</i>
          reply_markup: |
            {
              "inline_keyboard": [
                [
                  {
                    "text": "‚¨áÔ∏è Download Now",
                    "url": "${{ env.DOWNLOAD_URL }}"
                  },
                  {
                    "text": "üìù Release Notes",
                    "url": "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}"
                  }
                ],
                [
                  {
                    "text": "üîç Verify Checksum",
                    "url": "https://github.com/${{ github.repository }}/releases/tag/${{ github.ref }}#user-content-file-sha256"
                  }
                ]
              ]
            }